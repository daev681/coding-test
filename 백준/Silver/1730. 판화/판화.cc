/*
판화 실패다국어
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
2 초	128 MB	3432	1243	1029	36.711%
문제
W대학교 미술대학 조소과에서는 지루한 목판화 작업을 하는 학생들을 돕기 위해 판화 기계를 제작하였다.

기계는 로봇 팔이 쥔 조각도를 상하좌우 네 방향으로 움직일 수 있는 구조로서, 조각도 아래에 목판을 놓으면 그 위에 선들을 자동으로 그어주는 기능을 가지고 있다.

목판에는 N2개의 점들이 일정한 간격으로 N행 N열의 격자모양을 이루며 찍혀있다. 처음 로봇의 조각도를 올려놓는 위치는 항상 이 점들 중 맨 왼쪽 맨 위의 꼭짓점이다.

로봇 팔을 움직이는 명령의 순서가 주어졌을 때, 목판 위에 패인 조각도의 혼적을 출력하는 프로그램을 작성하시오.

판화 기계는 작동 도중 로봇 팔이 격자 바깥으로 나가도록 하는 움직임 명령을 만나면, 무시하고 그 다음 명령을 진행한다.

입력
첫째 줄에 목판의 크기 N (2 ≤ N ≤ 10)이 주어진다. 행 열의 점들이 찍혀 있다는 의미이다. 둘째 줄에 로봇팔의 움직임이 한 줄로 공백 없이 입력된다. 위쪽으로 이동은 'U', 아래쪽으로 이동은 'D', 왼쪽으로 이동은 'L', 오른쪽으로 이동은 'R'로 표시된다. 로봇팔의 움직임을 나타내는 이 문자열의 길이는 최대 250이다.

출력
로봇팔이 지나지 않은 점은 '.'으로, 로봇팔이 수직 방향으로만 지난 점은 '|'으로, 로봇팔이 수평 방향으로만 지난 점은 '-'으로, 수직과 수평 방향 모두로 지난 점은 '+'로 표기하도록 한다. 네 문자의 ASCII 코드는 각각 46, 124, 45, 43이다.

*/

#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main(){
    int n;
    string s;
    cin >> n >> s;
    vector<vector<int>> v(n, vector<int>(n, 0));
 
    // 0 = .
    // | = 1
    // - = 2
    // + = 3
    int x = 0, y = 0;
    v[y][x] = 0;  // 시작점 방문 상태 초기화

    for (int i = 0; i < s.length(); i++) {
        int nx = x, ny = y;

        if (s[i] == 'U' && y > 0) ny--;
        else if (s[i] == 'D' && y < n - 1) ny++;
        else if (s[i] == 'L' && x > 0) nx--;
        else if (s[i] == 'R' && x < n - 1) nx++;
        else continue;

        // 수직 이동이면 비트 1, 수평 이동이면 비트 2를 이전 위치와 새 위치에 추가
        if (ny != y) {
            v[y][x] |= 1;
            v[ny][nx] |= 1;
        } else if (nx != x) {
            v[y][x] |= 2;
            v[ny][nx] |= 2;
        }

        x = nx;
        y = ny;
    }

        for (auto& row : v) {
        for (int val : row) {
            if (val == 0) cout << '.';
            else if (val == 1) cout << '|';
            else if (val == 2) cout << '-';
            else cout << '+';
        }
        cout << '\n';
    }

    return 0;
}
